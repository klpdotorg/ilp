version: 2
jobs:
  build:
    working_directory: ~/klpdotorg/ilp
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      DATABASE_URL: postgresql://ubuntu:@127.0.0.1:5432/test_ilp
      POSTGRES_USER: ubuntu
      POSTGRES_DB: test_ilp
    
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
        working_directory: ~/klpdotorg/ilp
        command: 'echo ''Asia/Kolkata'' | sudo tee -a /etc/timezone; sudo dpkg-reconfigure
          -f noninteractive tzdata; sudo service postgresql restart; '
    - run:
        working_directory: ~/klpdotorg/ilp
        command: if ["3.6.1" == "system"] || pyenv versions --bare | grep -x -q '3.6.1'; then pyenv global version;else pyenv install --skip-existing  3.6.1 && pyenv global version && pyenv rehash && pip install virtualenv && pip install nose && pip install pep8 && pyenv rehash;fi
    
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        
    - run: sudo apt-get update
    - run: sudo apt-get install -y libgdal-dev
    - run: sudo apt-get install -y postgis
    - run: sudo apt-get install -y postgresql-client
    - run: sudo apt-get install -y python-virtualenv
    - run: python -m venv venv
    - run: source venv/bin/activate && pip install -r requirements/test.txt
    - run: if [ -e requirements.txt ]; then pip install -r requirements.txt; else pip install -r requirements.pip; fi
    - run: pip install unittest-xml-reporting
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
         - venv
    - run: mv ilp/settings/ci_settings.py.sample ilp/settings/ci_settings.py
    - run: . venv/bin/activate && coverage run --source='.' --omit='venv/*' manage.py test boundary users assessments
    - run: . venv/bin/activate && coverage report
    - run: . venv/bin/activate && coverage html
    - run: mkdir -p /tmp/artifacts
    - run: mv htmlcov /tmp/artifacts
    - run: git clean -dxf
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
