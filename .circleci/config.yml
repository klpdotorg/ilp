version: 2
jobs: #defines a job which will be fired when the workflow is called with that particular job
  build:
    working_directory: ~/klpdotorg/ilp
    parallelism: 1  #number of executors running at a time
    environment: #enviroment is used for defining the variables for configuration purposes
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts            #artifacts are used to store the result of the build process
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    shell: /bin/bash --login
    docker: #docker a container
      - image: circleci/python:3.6-stretch #python programming language under circleci
        environment:
          DATABASE_URL: postgresql://ubuntu:@127.0.0.1:5432/test_ilp
      - image: mdillon/postgis:9.6 # database image for service container available at `localhost:<port>`
        environment: # environment variables for database
          POSTGRES_USER: ubuntu
          POSTGRES_DB: test_ilp
    steps:
    - checkout #Checkout is a special step used to check out source code to the configured path. (The path defaults to the working directory.) It is more of a helper function designed to make checking out code easy for you.
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS #run is used to run set of instructions #create a new directory
    - run:
        working_directory: ~/klpdotorg/ilp
        command: 'echo ''Asia/Kolkata'' | sudo tee -a /etc/timezone; sudo dpkg-reconfigure -f noninteractive tzdata;'
    - run: sudo apt-get update && sudo apt-get install -y libgdal-dev python3-dev postgis postgresql-client python3-virtualenv
    - run: python -m venv venv; source venv/bin/activate && pip --no-cache install -r requirements/test.txt
    - run: mv ilp/settings/ci_settings.py.sample ilp/settings/ci_settings.py
    - run: sudo python -m pip --no-cache install coverage requests
    - run: git clean -dxf
    - store_test_results: #stores the result of the build
        path: /tmp/circleci-test-results
    - store_artifacts: #stores the output of the build process
        path: /tmp/artifacts
    
  deploy:
    docker:
      # Python image required for AWS client
      - image: circleci/python:2.7-stretch
    working_directory: ~/ilp
    steps:
      - checkout
      - run:
          name: Install pip & Install awscli #name is used for giving names to different versions of same service or it can be used for title of the steps
          command: 'sudo apt-get update && sudo apt-get install python-pip && sudo pip install awscli' #command used for overriding the container's entry point or used as executor
      - run:
          name: Deploy using CodeDeploy
          command: |
            # Changing env based on branch
            [[ $CIRCLE_BRANCH == 'master' ]] && env=staging || env=dev ;\
            aws deploy create-deployment \
            --application-name ilpdev \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name ilp${env}-group \
            --ignore-application-stop-failures \
            --description 'ILP GitHub deployment' \
            --github-location repository=klpdotorg/ilp,commitId=${CIRCLE_SHA1} --region ap-south-1
workflows: #set of instruction for running the jobs
  version: 2
  build_and_deploy: #name of the workflow
    jobs:
      - build:
          filters:  #for choosing particular branch name
            branches: #to specify the name of the branch
              only:  #particular
                - 4EdgeIT-07112022
                - development
                - master
      - deploy:
          filters:
            branches:
              only:
                - 4EdgeIT-07112022
                - development
                - master
          requires: #It is used for specifying dependence of the job
            - build
