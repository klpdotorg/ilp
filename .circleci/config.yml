version: 2.0

jobs:
 test:
    working_directory: ~/ilp
    docker:
      - image: circleci/python:3.6.1
    environment:
     # CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
     # CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      DATABASE_URL: postgresql://ubuntu:@127.0.0.1:5432/test_ilp
      POSTGRES_USER: ubuntu
      POSTGRES_DB: test_ilp
    steps:
      - checkout
      #- run:
          #name: Create venv
          #command: |
          #   'python3 -m venv venv'
          #   'source venv/bin/activate && pip install -r requirements/test.txt'   
      - run:
          name: Report creation
          command: 'mv ilp/settings/ci_settings.py.sample ilp/settings/ci_settings.py'
 
 build:
    working_directory: ~/ilp
    docker:
      - image: circleci/python:3.6.1
    steps:
      - run:
        name: creating venv
        command: 'venv/bin/activate && coverage run --source='.' --omit='venv/*' manage.py test boundary users assessments'
      - run:
          name: Report
          command: |
              'venv/bin/activate && coverage report'
              'venv/bin/activate && coverage html'
      - run:
          name: Move artifacts
          command: 'mkdir -p /tmp/circleci-artifacts && mv htmlcov /tmp/circleci-artifacts'

 deploy:
    working_directory: ~/ilp
    docker:
      - image: circleci/python:3.6.1
        command: /sbin/init
    steps:
      - checkout
      - run:
          name: Install pip
          command: 'sudo apt-get update && sudo apt-get install -y python-pip'
      - run:
          name: Install awscli
          command: 'sudo pip install awscli'      

workflows:
  version: 2
  test_build_deploy:
   jobs:
      - test
      - build
      - deploy:
           filters:
            branches:
              only: circleci-upgrade_test
