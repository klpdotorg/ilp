# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-08-11 04:38
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('common', '0002_religion_studentcategory'),
        ('schools', '0009_institutionclassyearstucount_institutionstugendercount'),
        ('boundary', '0011_electionboundary_geom'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerInstitution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=200)),
                ('double_entry', models.IntegerField()),
                ('date_of_visit', models.DateField(max_length=20)),
                ('comments', models.CharField(max_length=200, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('sysid', models.IntegerField(null=True)),
                ('entered_at', models.DateField(max_length=20)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=200)),
                ('double_entry', models.IntegerField()),
                ('date_of_visit', models.DateField(max_length=20)),
                ('comments', models.CharField(max_length=200, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerStudentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=200)),
                ('double_entry', models.IntegerField()),
                ('date_of_visit', models.DateField(max_length=20)),
                ('comments', models.CharField(max_length=200, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DisplayType',
            fields=[
                ('char_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('desc', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EasyAuditCRUDEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete')], max_length=20)),
                ('object_id', models.IntegerField()),
                ('object_repr', models.CharField(max_length=100)),
                ('object_json_repr', models.CharField(max_length=100)),
                ('datetime', models.DateField(max_length=20)),
                ('content_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GuardianUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_pk', models.CharField(max_length=100)),
                ('content_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('permission_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Permission')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('filename', models.CharField(max_length=300)),
                ('reponseid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.AnswerInstitution')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('char_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('admin0', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boundary.Boundary')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=100)),
                ('display_text', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=50)),
                ('options', models.CharField(max_length=100, null=True)),
                ('is_featured', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField(max_length=20)),
                ('end_date', models.DateField(max_length=20, null=True)),
                ('verison', models.IntegerField(blank=True, null=True)),
                ('double_entry', models.BooleanField(default=True)),
                ('created_at', models.DateField(max_length=20)),
                ('updated_at', models.DateField(max_length=20)),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AcademicYear')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('inst_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.InstitutionType')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGroupInstitutionAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Institution')),
                ('questiongroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.QuestionGroup')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGroupQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Question')),
                ('questiongroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.QuestionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGroupStudentGroupAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questiongroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.QuestionGroup')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status')),
                ('studentgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.StudentGroup')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.DisplayType')),
            ],
        ),
        migrations.CreateModel(
            name='RespondentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ResponseType',
            fields=[
                ('char_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('desc', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateField(max_length=20)),
                ('updated_at', models.DateField(max_length=20, null=True)),
                ('desc', models.CharField(max_length=200, null=True)),
                ('partner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.Partner')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyType',
            fields=[
                ('char_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('desc', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='questiontype',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.ResponseType'),
        ),
        migrations.AddField(
            model_name='questiongroup',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.Source'),
        ),
        migrations.AddField(
            model_name='questiongroup',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status'),
        ),
        migrations.AddField(
            model_name='questiongroup',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Survey'),
        ),
        migrations.AddField(
            model_name='questiongroup',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.SurveyType'),
        ),
        migrations.AddField(
            model_name='question',
            name='question_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.QuestionType'),
        ),
        migrations.AddField(
            model_name='question',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status'),
        ),
        migrations.AddField(
            model_name='answerstudentgroup',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Question'),
        ),
        migrations.AddField(
            model_name='answerstudentgroup',
            name='questiongroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.QuestionGroup'),
        ),
        migrations.AddField(
            model_name='answerstudentgroup',
            name='respondent_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.RespondentType'),
        ),
        migrations.AddField(
            model_name='answerstudentgroup',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status'),
        ),
        migrations.AddField(
            model_name='answerstudentgroup',
            name='studentgroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.StudentGroup'),
        ),
        migrations.AddField(
            model_name='answerstudent',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Question'),
        ),
        migrations.AddField(
            model_name='answerstudent',
            name='questiongroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.QuestionGroup'),
        ),
        migrations.AddField(
            model_name='answerstudent',
            name='respondent_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.RespondentType'),
        ),
        migrations.AddField(
            model_name='answerstudent',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status'),
        ),
        migrations.AddField(
            model_name='answerstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Student'),
        ),
        migrations.AddField(
            model_name='answerinstitution',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Question'),
        ),
        migrations.AddField(
            model_name='answerinstitution',
            name='questiongroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.QuestionGroup'),
        ),
        migrations.AddField(
            model_name='answerinstitution',
            name='respondent_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.RespondentType'),
        ),
        migrations.AddField(
            model_name='answerinstitution',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Status'),
        ),
        migrations.AlterUniqueTogether(
            name='questiongroupstudentgroupassociation',
            unique_together=set([('studentgroup', 'questiongroup')]),
        ),
        migrations.AlterUniqueTogether(
            name='questiongroupquestions',
            unique_together=set([('question', 'questiongroup')]),
        ),
        migrations.AlterUniqueTogether(
            name='questiongroupinstitutionassociation',
            unique_together=set([('institution', 'questiongroup')]),
        ),
        migrations.AlterUniqueTogether(
            name='answerstudentgroup',
            unique_together=set([('question', 'questiongroup', 'studentgroup', 'date_of_visit')]),
        ),
        migrations.AlterUniqueTogether(
            name='answerstudent',
            unique_together=set([('question', 'questiongroup', 'student')]),
        ),
        migrations.AlterUniqueTogether(
            name='answerinstitution',
            unique_together=set([('question', 'questiongroup', 'institution', 'date_of_visit')]),
        ),
    ]
